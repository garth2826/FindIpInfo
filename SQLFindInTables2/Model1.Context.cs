//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLFindInTables2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WideWorldImportersEntities : DbContext
    {
        public WideWorldImportersEntities()
            : base("name=WideWorldImportersEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<DeliveryMethod> DeliveryMethods { get; set; }
        public virtual DbSet<PaymentMethod> PaymentMethods { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<StateProvince> StateProvinces { get; set; }
        public virtual DbSet<SystemParameter> SystemParameters { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<GarthDeviceInfo> GarthDeviceInfoes { get; set; }
        public virtual DbSet<GarthTest11> GarthTest11 { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<PurchaseOrderLine> PurchaseOrderLines { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<SupplierCategory> SupplierCategories { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<SupplierTransaction> SupplierTransactions { get; set; }
        public virtual DbSet<BuyingGroup> BuyingGroups { get; set; }
        public virtual DbSet<CustomerCategory> CustomerCategories { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CustomerTransaction> CustomerTransactions { get; set; }
        public virtual DbSet<InvoiceLine> InvoiceLines { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<OrderLine> OrderLines { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<SpecialDeal> SpecialDeals { get; set; }
        public virtual DbSet<ColdRoomTemperature> ColdRoomTemperatures { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<PackageType> PackageTypes { get; set; }
        public virtual DbSet<StockGroup> StockGroups { get; set; }
        public virtual DbSet<StockItemHolding> StockItemHoldings { get; set; }
        public virtual DbSet<StockItem> StockItems { get; set; }
        public virtual DbSet<StockItemStockGroup> StockItemStockGroups { get; set; }
        public virtual DbSet<StockItemTransaction> StockItemTransactions { get; set; }
        public virtual DbSet<VehicleTemperature> VehicleTemperatures { get; set; }
        public virtual DbSet<Cities_Archive> Cities_Archive { get; set; }
        public virtual DbSet<Countries_Archive> Countries_Archive { get; set; }
        public virtual DbSet<DeliveryMethods_Archive> DeliveryMethods_Archive { get; set; }
        public virtual DbSet<PaymentMethods_Archive> PaymentMethods_Archive { get; set; }
        public virtual DbSet<People_Archive> People_Archive { get; set; }
        public virtual DbSet<StateProvinces_Archive> StateProvinces_Archive { get; set; }
        public virtual DbSet<TransactionTypes_Archive> TransactionTypes_Archive { get; set; }
        public virtual DbSet<Result> Results { get; set; }
        public virtual DbSet<SupplierCategories_Archive> SupplierCategories_Archive { get; set; }
        public virtual DbSet<Suppliers_Archive> Suppliers_Archive { get; set; }
        public virtual DbSet<BuyingGroups_Archive> BuyingGroups_Archive { get; set; }
        public virtual DbSet<CustomerCategories_Archive> CustomerCategories_Archive { get; set; }
        public virtual DbSet<Customers_Archive> Customers_Archive { get; set; }
        public virtual DbSet<ColdRoomTemperatures_Archive> ColdRoomTemperatures_Archive { get; set; }
        public virtual DbSet<Colors_Archive> Colors_Archive { get; set; }
        public virtual DbSet<PackageTypes_Archive> PackageTypes_Archive { get; set; }
        public virtual DbSet<StockGroups_Archive> StockGroups_Archive { get; set; }
        public virtual DbSet<StockItems_Archive> StockItems_Archive { get; set; }
        public virtual DbSet<GarthDeviceInfo2> GarthDeviceInfo2 { get; set; }
        public virtual DbSet<GarthCompany> GarthCompanies { get; set; }
        public virtual DbSet<GarthDevice> GarthDevices { get; set; }
        public virtual DbSet<GarthLog> GarthLogs { get; set; }
    
        [DbFunction("WideWorldImportersEntities", "Test_Function")]
        public virtual IQueryable<Test_Function_Result> Test_Function(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Test_Function_Result>("[WideWorldImportersEntities].[Test_Function](@SearchStr)", searchStrParameter);
        }
    
        [DbFunction("WideWorldImportersEntities", "Test_Function2")]
        public virtual IQueryable<Test_Function2_Result> Test_Function2(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Test_Function2_Result>("[WideWorldImportersEntities].[Test_Function2](@SearchStr)", searchStrParameter);
        }
    
        [DbFunction("WideWorldImportersEntities", "test5")]
        public virtual IQueryable<test5_Result> test5(Nullable<int> searchStr)
        {
            var searchStrParameter = searchStr.HasValue ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<test5_Result>("[WideWorldImportersEntities].[test5](@SearchStr)", searchStrParameter);
        }
    
        [DbFunction("WideWorldImportersEntities", "test6")]
        public virtual IQueryable<test6_Result> test6(Nullable<int> searchStr)
        {
            var searchStrParameter = searchStr.HasValue ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<test6_Result>("[WideWorldImportersEntities].[test6](@SearchStr)", searchStrParameter);
        }
    
        public virtual ObjectResult<string> garthTest(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("garthTest", searchTextParameter);
        }
    
        public virtual ObjectResult<SearchAllTables_Result> SearchAllTables(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchAllTables_Result>("SearchAllTables", searchStrParameter);
        }
    
        public virtual int SearchAllTables2(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables2", searchStrParameter);
        }
    
        public virtual ObjectResult<SearchAllTables3_Result> SearchAllTables3(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchAllTables3_Result>("SearchAllTables3", searchStrParameter);
        }
    
        public virtual int SearchAllTables4(string searchStr)
        {
            var searchStrParameter = searchStr != null ?
                new ObjectParameter("SearchStr", searchStr) :
                new ObjectParameter("SearchStr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SearchAllTables4", searchStrParameter);
        }
    
        public virtual ObjectResult<FindMyDevice_Result> FindMyDevice(string companyName)
        {
            var companyNameParameter = companyName != null ?
                new ObjectParameter("companyName", companyName) :
                new ObjectParameter("companyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindMyDevice_Result>("FindMyDevice", companyNameParameter);
        }
    }
}
